import pandas as pd


configfile: "workflow/config/pipeline.yaml"

sra_files, sra = glob_wildcards('rawdata/rnaseq/{sra_accession}/{sra_accession_}.sra')

KALLISTO_version = config["KALLISTO_version"] 
REF_BUILD = config["GENCODE_GENOME"]["REF_BUILD"]
REF_VERSION = config["GENCODE_GENOME"]["REF_VERSION"]

include: "rules/rnaseq.smk"

rule buildPharmacoSet:
    input:
        mae = expand("procdata/rnaseq/{tool}_v{tool_version}_{ref_build}.{ref_version}/mae.RDS",
            tool = "kallisto",
            tool_version = KALLISTO_version,
            ref_build = REF_BUILD,
            ref_version = REF_VERSION
        ),
        tre = "procdata/treatmentResponse/tre.RDS",
        sampleMetadata = "metadata/sampleMetadata.txt"
    output:
        "results/data/PharmacoSet.RDS"
    log:
        'logs/buildPharmacoSet.log'
    script:
        "scripts/buildPharmacoSet.R"




rule build_treatmentResponseExperiment:
    input:
        treatmentResponse = "rawdata/doseResponseCurves_TFRI_TNBC_UHN.RData"
    output:
        tre = "procdata/treatmentResponse/tre.RDS"
    log:
        'logs/treatmentResponse/build_treatmentResponseExperiment.log',
    threads: 
        30
    script:
        "scripts/build_treatmentResponseExperiment.R"



rule build_MultiAssayExperiment:
    input:
        rse_list = expand("procdata/rnaseq/{tool}_v{tool_version}_{ref_build}.{ref_version}/rse_list.RData",
            tool = "kallisto",
            tool_version =KALLISTO_version,
            ref_build = REF_BUILD,
            ref_version = REF_VERSION
        ),
        sampleMetadata = "metadata/sampleMetadata.txt"
    output:
        mae = "procdata/rnaseq/{tool}_v{tool_version}_{ref_build}.{ref_version}/mae.RDS"
    log:
        'logs/rnaseq/{tool}_v{tool_version}_{ref_build}.{ref_version}/build_MultiAssayExperiment.log',
    script:
        "scripts/build_MultiAssayExperiment.R"

rule create_rse_list:
    input:
        quant_files = lambda wc:
            expand("procdata/rnaseq/{tool}_v{tool_version}_{ref_build}.{ref_version}/{sample}/abundance.h5",
                tool=wc.tool,
                tool_version=wc.tool_version,
                ref_build=wc.ref_build,
                ref_version=wc.ref_version,
                sample = sra_files
        ),
        annotation_file = "references/{ref_build}_v{ref_version}/annotation.gtf",
    output:
        rse_list = "procdata/rnaseq/{tool}_v{tool_version}_{ref_build}.{ref_version}/rse_list.RData",
    log:
        'logs/rnaseq/{tool}_v{tool_version}_{ref_build}.{ref_version}/create_rse_list.log',
    envmodules:
        'R/4.2.1',
    threads: 2,
    script:
        "scripts/rnaseq/create_rse_list.R"
